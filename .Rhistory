HTML(paste0("<center>", "<b>", "About:", "</b>","</center>")),
HTML(paste0('<center>','<img src="https://www.pharmar.org/img/carousel/pharmaRlogo_smaller.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", br()),
div(style="text-align:center","The riskmetric package is a collection of risk", br(), "metrics to evaluate the quality of R packages.", br() ,"The risk of using an R package is evaluated", br(), "based on a number of metrics meant to evaluate", br() , "development, best practices, code", br(), "documentation, community engagement,",br()," and development sustainability"),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://raw.githubusercontent.com/sonatype-nexus-community/oysteR/master/man/figures/logo.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", "The osyteR package scans", br(), "R packages with the 'OSS' Index", br(), "provided by 'Sonatype' and", br(), "reports any known vulnerabilities. "),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://i.ibb.co/8jyykmR/procogia-vertical-light-bg-1.png" style="height: 100px; width:200px;"/>' , '</center>'))
)
),
dashboardBody(
fluidRow(
valueBoxOutput("cranversion"),
valueBoxOutput("packages_selected"),
valueBoxOutput("valuebox3")
),
fluidRow(
box(title = "Ticket Numbers", status = "primary", solidHeader = TRUE,
id="box1", height = my_height,
selectizeInput(
inputId = "ticketnumbers",
label = "Enter the Ivanti Ticket Number (if applicable)",
choices = "",
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Ivanti Ticket Number (if applicable)", status = "primary", solidHeader = TRUE,
id="box2", height = my_height,
textOutput("ticket_output" ))
),
spsComps::heightMatcher("box2", "box1"),
fluidRow(
box(title = "Enter Package Names", status = "info", solidHeader = TRUE,
id="box3", height = my_height,
selectizeInput(
inputId = "selectedPackages",
label = "Note: If package is not in exisiting choices please enter it's name exactly as it would be found in CRAN/MRAN",
choices = packagesDF$Package,
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Packages Selected", status = "info", solidHeader = TRUE,
id="box4", height = my_height,
textOutput("caption")),
spsComps::heightMatcher("box4", "box3")
)
)
)
server <- function(input, output) {
output$caption <- renderText({
paste0(input$selectedPackages, collapse = ", ")
})
packages <- reactive({
input$selectedPackages
})
output$ticket_output <- renderText({
paste0(input$ticketnumbers, collapse = ",  ")
})
tickets <- reactive({
input$ticketnumbers
})
output$cranversion <- renderValueBox({
valueBox(
"CRAN",
"Snapshot 2021-11-08",
icon = icon("r-project")
)
})
output$packages_selected <- renderValueBox({
valueBox(
length(input$selectedPackages),
"Packages Selected",
color = "purple",
icon = icon("list-ol")
)
})
output$valuebox3 <- renderValueBox({
valueBox(
length(input$ticketnumbers),
"Number of Tickets",
color = "teal",
icon = icon("ticket-alt")
)
})
output$checkrender <- renderText({
if (identical(rmarkdown::metadata$runtime, "shiny")) {
TRUE
} else {
FALSE
}
})
output$btn <- downloadHandler(
filename = function(){paste0("PckgValidationReport", format(Sys.Date(),format="%m-%d-%Y"), ".html")},
content = function(file) {
withProgress(message = 'Rendering, please wait!', {
tempReport <- file.path(tempdir(),"validation_report.Rmd")
file.copy("validation_report.Rmd", tempReport, overwrite = TRUE)
rmarkdown::render("validation_report.Rmd", output_file = file,
params = list(pkg = packages(),
ticket = tickets(),
n = input$slider), # here I'm passing data in params
envir = new.env(parent = globalenv()),clean=F,encoding="utf-8"
)
})
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
library(shiny)
library(shinydashboard)
mran_url <- 'https://mran.revolutionanalytics.com/snapshot/2021-11-08'
mran_pkg <- as.data.frame(available.packages(repos = mran_url))
packagesDF <- mran_pkg %>% select(Package)
my_height = "15em"
ui <- dashboardPage(
dashboardHeader(title = "Package Validation Report",
titleWidth = 300),
dashboardSidebar(
width = 300,
sidebarMenu(
div(style="text-align:center", br()),
div(style="text-align:center","Select Packages to Validate first:",br(), "then click the following button."),
div(style="text-align:center", br()),
div(style = "display:inline-block;width:100%;text-align: center;",
downloadButton("btn", label="Generate Report"),
icon = icon("paper-plane")),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0("<center>", "<b>", "About:", "</b>","</center>")),
HTML(paste0('<center>','<img src="https://www.pharmar.org/img/carousel/pharmaRlogo_smaller.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", br()),
div(style="text-align:center","The riskmetric package is a collection of risk", br(), "metrics to evaluate the quality of R packages.", br() ,"The risk of using an R package is evaluated", br(), "based on a number of metrics meant to evaluate", br() , "development, best practices, code", br(), "documentation, community engagement,",br()," and development sustainability"),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://raw.githubusercontent.com/sonatype-nexus-community/oysteR/master/man/figures/logo.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", "The osyteR package scans", br(), "R packages with the 'OSS' Index", br(), "provided by 'Sonatype' and", br(), "reports any known vulnerabilities. "),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://i.ibb.co/8jyykmR/procogia-vertical-light-bg-1.png" style="height: 100px; width:200px;"/>' , '</center>'))
)
),
dashboardBody(
fluidRow(
valueBoxOutput("cranversion"),
valueBoxOutput("packages_selected"),
valueBoxOutput("valuebox3")
),
fluidRow(
box(title = "Ticket Numbers", status = "primary", solidHeader = TRUE,
id="box1", height = my_height,
selectizeInput(
inputId = "ticketnumbers",
label = "Enter the Ivanti Ticket Number (if applicable)",
choices = "",
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Ivanti Ticket Number (if applicable)", status = "primary", solidHeader = TRUE,
id="box2", height = my_height,
textOutput("ticket_output" ))
),
spsComps::heightMatcher("box2", "box1"),
fluidRow(
box(title = "Enter Package Names", status = "info", solidHeader = TRUE,
id="box3", height = my_height,
selectizeInput(
inputId = "selectedPackages",
label = "Note: If package is not in exisiting choices please enter it's name exactly as it would be found in CRAN/MRAN",
choices = packagesDF$Package,
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Packages Selected", status = "info", solidHeader = TRUE,
id="box4", height = my_height,
textOutput("caption")),
spsComps::heightMatcher("box4", "box3")
)
)
)
server <- function(input, output) {
output$caption <- renderText({
paste0(input$selectedPackages, collapse = ", ")
})
packages <- reactive({
input$selectedPackages
})
output$ticket_output <- renderText({
paste0(input$ticketnumbers, collapse = ",  ")
})
tickets <- reactive({
input$ticketnumbers
})
output$cranversion <- renderValueBox({
valueBox(
"CRAN",
"Snapshot 2021-11-08",
icon = icon("r-project")
)
})
output$packages_selected <- renderValueBox({
valueBox(
length(input$selectedPackages),
"Packages Selected",
color = "purple",
icon = icon("list-ol")
)
})
output$valuebox3 <- renderValueBox({
valueBox(
length(input$ticketnumbers),
"Number of Tickets",
color = "teal",
icon = icon("ticket-alt")
)
})
output$checkrender <- renderText({
if (identical(rmarkdown::metadata$runtime, "shiny")) {
TRUE
} else {
FALSE
}
})
output$btn <- downloadHandler(
filename = function(){paste0("PckgValidationReport", format(Sys.Date(),format="%m-%d-%Y"), ".html")},
content = function(file) {
withProgress(message = 'Rendering, please wait!', {
tempReport <- file.path(tempdir(),"validation_report.Rmd")
file.copy("validation_report.Rmd", tempReport, overwrite = TRUE)
rmarkdown::render("validation_report.Rmd", output_file = file,
params = list(pkg = packages(),
ticket = tickets(),
rendered_by_shiny = TRUE), # here I'm passing data in params
envir = new.env(parent = globalenv()),clean=F,encoding="utf-8"
)
})
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
ui <- dashboardPage(
dashboardHeader(title = "Package Validation Report",
titleWidth = 300),
dashboardSidebar(
width = 300,
sidebarMenu(
div(style="text-align:center", br()),
div(style="text-align:center","Select Packages to Validate first:",br(), "then click the following button."),
div(style="text-align:center", br()),
div(style = "display:inline-block;width:100%;text-align: center;",
downloadButton("btn", label="Generate Report"),
icon = icon("paper-plane")),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0("<center>", "<b>", "About:", "</b>","</center>")),
HTML(paste0('<center>','<img src="https://www.pharmar.org/img/carousel/pharmaRlogo_smaller.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", br()),
div(style="text-align:center","The riskmetric package is a collection of risk", br(), "metrics to evaluate the quality of R packages.", br() ,"The risk of using an R package is evaluated", br(), "based on a number of metrics meant to evaluate", br() , "development, best practices, code", br(), "documentation, community engagement,",br()," and development sustainability"),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://raw.githubusercontent.com/sonatype-nexus-community/oysteR/master/man/figures/logo.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", "The osyteR package scans", br(), "R packages with the 'OSS' Index", br(), "provided by 'Sonatype' and", br(), "reports any known vulnerabilities. "),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://i.ibb.co/8jyykmR/procogia-vertical-light-bg-1.png" style="height: 100px; width:200px;"/>' , '</center>'))
)
),
dashboardBody(
fluidRow(
valueBoxOutput("cranversion"),
valueBoxOutput("packages_selected"),
valueBoxOutput("valuebox3")
),
fluidRow(
box(title = "Ticket Numbers", status = "primary", solidHeader = TRUE,
id="box1", height = my_height,
selectizeInput(
inputId = "ticketnumbers",
label = "Enter the Ivanti Ticket Number (if applicable)",
choices = "",
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Ivanti Ticket Number (if applicable)", status = "primary", solidHeader = TRUE,
id="box2", height = my_height,
textOutput("ticket_output" ))
),
spsComps::heightMatcher("box2", "box1"),
fluidRow(
box(title = "Enter Package Names", status = "info", solidHeader = TRUE,
id="box3", height = my_height,
selectizeInput(
inputId = "selectedPackages",
label = "Note: If package is not in exisiting choices please enter it's name exactly as it would be found in CRAN/MRAN",
choices = packagesDF$Package,
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Packages Selected", status = "info", solidHeader = TRUE,
id="box4", height = my_height,
textOutput("caption")),
spsComps::heightMatcher("box4", "box3")
)
)
)
library(shiny)
library(shinydashboard)
mran_url <- 'https://mran.revolutionanalytics.com/snapshot/2021-11-08'
mran_pkg <- as.data.frame(available.packages(repos = mran_url))
packagesDF <- mran_pkg %>% select(Package)
my_height = "15em"
ui <- dashboardPage(
dashboardHeader(title = "Package Validation Report",
titleWidth = 300),
dashboardSidebar(
width = 300,
sidebarMenu(
div(style="text-align:center", br()),
div(style="text-align:center","Select Packages to Validate first:",br(), "then click the following button."),
div(style="text-align:center", br()),
div(style = "display:inline-block;width:100%;text-align: center;",
downloadButton("btn", label="Generate Report"),
icon = icon("paper-plane")),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0("<center>", "<b>", "About:", "</b>","</center>")),
HTML(paste0('<center>','<img src="https://www.pharmar.org/img/carousel/pharmaRlogo_smaller.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", br()),
div(style="text-align:center","The riskmetric package is a collection of risk", br(), "metrics to evaluate the quality of R packages.", br() ,"The risk of using an R package is evaluated", br(), "based on a number of metrics meant to evaluate", br() , "development, best practices, code", br(), "documentation, community engagement,",br()," and development sustainability"),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://raw.githubusercontent.com/sonatype-nexus-community/oysteR/master/man/figures/logo.png" style="height: 100px; width:100px;"/>' , '</center>')),
div(style="text-align:center", "The osyteR package scans", br(), "R packages with the 'OSS' Index", br(), "provided by 'Sonatype' and", br(), "reports any known vulnerabilities. "),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
div(style="text-align:center", br()),
HTML(paste0('<center>','<img src="https://i.ibb.co/8jyykmR/procogia-vertical-light-bg-1.png" style="height: 100px; width:200px;"/>' , '</center>'))
)
),
dashboardBody(
fluidRow(
valueBoxOutput("cranversion"),
valueBoxOutput("packages_selected"),
valueBoxOutput("valuebox3")
),
fluidRow(
box(title = "Ticket Numbers", status = "primary", solidHeader = TRUE,
id="box1", height = my_height,
selectizeInput(
inputId = "ticketnumbers",
label = "Enter the Ivanti Ticket Number (if applicable)",
choices = "",
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Ivanti Ticket Number (if applicable)", status = "primary", solidHeader = TRUE,
id="box2", height = my_height,
textOutput("ticket_output" ))
),
spsComps::heightMatcher("box2", "box1"),
fluidRow(
box(title = "Enter Package Names", status = "info", solidHeader = TRUE,
id="box3", height = my_height,
selectizeInput(
inputId = "selectedPackages",
label = "Note: If package is not in exisiting choices please enter it's name exactly as it would be found in CRAN/MRAN",
#choices = packagesDF$Package,
choices = NULL,
selected = NULL,
multiple = TRUE,
width = "100%",
options = list(
'plugins' = list('remove_button'),
'create' = TRUE,
'persist' = TRUE
)
)
),
box(title = "Packages Selected", status = "info", solidHeader = TRUE,
id="box4", height = my_height,
textOutput("caption")),
spsComps::heightMatcher("box4", "box3")
)
)
)
server <- function(input, output) {
updateSelectizeInput(session = session, inputId = 'selectedPackages',
choices = c(Choose = '', packagesDF$Package), server = TRUE)
output$caption <- renderText({
paste0(input$selectedPackages, collapse = ", ")
})
packages <- reactive({
input$selectedPackages
})
output$ticket_output <- renderText({
paste0(input$ticketnumbers, collapse = ",  ")
})
tickets <- reactive({
input$ticketnumbers
})
output$cranversion <- renderValueBox({
valueBox(
"CRAN",
"Snapshot 2021-11-08",
icon = icon("r-project")
)
})
output$packages_selected <- renderValueBox({
valueBox(
length(input$selectedPackages),
"Packages Selected",
color = "purple",
icon = icon("list-ol")
)
})
output$valuebox3 <- renderValueBox({
valueBox(
length(input$ticketnumbers),
"Number of Tickets",
color = "teal",
icon = icon("ticket-alt")
)
})
output$checkrender <- renderText({
if (identical(rmarkdown::metadata$runtime, "shiny")) {
TRUE
} else {
FALSE
}
})
output$btn <- downloadHandler(
filename = function(){paste0("PckgValidationReport", format(Sys.Date(),format="%m-%d-%Y"), ".html")},
content = function(file) {
withProgress(message = 'Rendering, please wait!', {
tempReport <- file.path(tempdir(),"validation_report.Rmd")
file.copy("validation_report.Rmd", tempReport, overwrite = TRUE)
rmarkdown::render("validation_report.Rmd", output_file = file,
params = list(pkg = packages(),
ticket = tickets(),
rendered_by_shiny = TRUE), # here I'm passing data in params
envir = new.env(parent = globalenv()),clean=F,encoding="utf-8"
)
})
}
)
}
# Run the application
shinyApp(ui = ui, server = server)
